////////////////////////////////////////////////////////////////////////////////
//
//  System Name : Alfa Core Rules
//     Filename : acr_passage_i
//          Date:
//       Author : Ronan
//
//    Var Prefix:
//  Dependencies:
//
//  Description
//
//  Revision History
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Includes ////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#include "acr_area_i"
#include "acr_tools_i"

////////////////////////////////////////////////////////////////////////////////
// Constants ///////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

const string _ACR_PASSAGE_SIZE = "acr_pass_size";

////////////////////////////////////////////////////////////////////////////////
// Structures //////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Global Variables ////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function Prototypes /////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Function Definitions ////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

int GetCorrectedCreatureSize(object oCreature) {
	if(GetObjectType(oCreature) != OBJECT_TYPE_CREATURE) return 0;
	
	int nSize = GetCreatureSize(oCreature);
	
	if(GetHasSpellEffect(SPELL_REDUCE_PERSON, oCreature) || GetHasSpellEffect(SPELL_REDUCE_PERSON_GREATER, oCreature) || GetHasSpellEffect(SPELL_REDUCE_PERSON_MASS, oCreature))
		nSize--;
		
	if(GetHasSpellEffect(SPELL_ENLARGE_PERSON, oCreature))
		nSize++;
	
	return nSize;
}

int GetCanPassThrough(object oPass, object oCreature) {
	int nPassSize = GetLocalInt(OBJECT_SELF, _ACR_PASSAGE_SIZE);
	if(!nPassSize) return TRUE;
	
	int nSubRace = GetSubRace(oCreature);
	if(nSubRace == RACIAL_SUBTYPE_INCORPOREAL || nSubRace == RACIAL_SUBTYPE_OOZE || GetLocalInt(oCreature, "X2_L_IS_INCORPOREAL "))
		return TRUE;
		
	// Later check for spells like gaseos form.
		
	return GetCorrectedCreatureSize(oCreature) <= nPassSize;
}

void CreatureInPassageHeartbeat(object oPassage, object oCreature) {

	if(!GetCanPassThrough(oPassage, oCreature)) {
		SendMessageToPC(oCreature, "You're too large to fit down this narrow passage - you're stuck in place!");
		ApplyEffectToObject(DURATION_TYPE_TEMPORARY, SupernaturalEffect(EffectEntangle()), oCreature, 6.5);
	}
}

void PassageTriggerHeartbeart(object oPassage) {
	object oCreature = GetFirstInPersistentObject();
	while(oCreature != OBJECT_INVALID) {
	
		CreatureInPassageHeartbeat(oPassage, oCreature);
		oCreature = GetNextInPersistentObject();
	}
}